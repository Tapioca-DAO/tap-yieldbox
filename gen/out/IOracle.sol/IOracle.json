{"abi":[{"type":"function","name":"get","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"rate","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"peek","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"rate","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"peekSpot","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"rate","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"get(bytes)":"d6d7d525","name(bytes)":"d568866c","peek(bytes)":"eeb8a8d3","peekSpot(bytes)":"d39bbef0","symbol(bytes)":"c699c4d6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/samples/lending/IOracle.sol\":\"IOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@boringcrypto/=node_modules/@boringcrypto/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":yieldbox/=contracts/\"]},\"sources\":{\"contracts/samples/lending/IOracle.sol\":{\"keccak256\":\"0x628bbcc65734616561f97c78e9e0355367669d2f673c2266dc9cb809c33fe9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f92c3fe1acd69bab6ba43cf6c38a6f90434c55ac6d100570587dcb928d69c90\",\"dweb:/ipfs/QmeLe4sPoTayTRgBPQ91xbGdpYHLD3nGZF1fFGxLEupwpg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"get","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"rate","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"peek","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"rate","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"peekSpot","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"get(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"rate":"The rate of the requested asset / pair / pool.","success":"if no valid (recent) rate is available, return false else true."}},"name(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"(string) A human readable name about this oracle."}},"peek(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"rate":"The rate of the requested asset / pair / pool.","success":"if no valid (recent) rate is available, return false else true."}},"peekSpot(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"rate":"The rate of the requested asset / pair / pool."}},"symbol(bytes)":{"params":{"data":"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"},"returns":{"_0":"(string) A human readable symbol name about this oracle."}}},"version":1},"userdoc":{"kind":"user","methods":{"get(bytes)":{"notice":"Get the latest exchange rate."},"name(bytes)":{"notice":"Returns a human readable name about this oracle."},"peek(bytes)":{"notice":"Check the last exchange rate without any state changes."},"peekSpot(bytes)":{"notice":"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."},"symbol(bytes)":{"notice":"Returns a human readable (short) name about this oracle."}},"version":1}},"settings":{"remappings":["@boringcrypto/=node_modules/@boringcrypto/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","eth-gas-reporter/=node_modules/eth-gas-reporter/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","prb-math/=node_modules/prb-math/","yieldbox/=contracts/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/samples/lending/IOracle.sol":"IOracle"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/samples/lending/IOracle.sol":{"keccak256":"0x628bbcc65734616561f97c78e9e0355367669d2f673c2266dc9cb809c33fe9bc","urls":["bzz-raw://6f92c3fe1acd69bab6ba43cf6c38a6f90434c55ac6d100570587dcb928d69c90","dweb:/ipfs/QmeLe4sPoTayTRgBPQ91xbGdpYHLD3nGZF1fFGxLEupwpg"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/samples/lending/IOracle.sol","id":8656,"exportedSymbols":{"IOracle":[8655]},"nodeType":"SourceUnit","src":"32:2842:37","nodes":[{"id":8610,"nodeType":"PragmaDirective","src":"32:23:37","nodes":[],"literals":["solidity","^","0.8",".9"]},{"id":8655,"nodeType":"ContractDefinition","src":"57:2816:37","nodes":[{"id":8620,"nodeType":"FunctionDefinition","src":"570:94:37","nodes":[],"documentation":{"id":8611,"nodeType":"StructuredDocumentation","src":"81:484:37","text":"@notice Get the latest exchange rate.\n @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\n For example:\n (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\n @return success if no valid (recent) rate is available, return false else true.\n @return rate The rate of the requested asset / pair / pool."},"functionSelector":"d6d7d525","implemented":false,"kind":"function","modifiers":[],"name":"get","nameLocation":"579:3:37","parameters":{"id":8614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8613,"mutability":"mutable","name":"data","nameLocation":"607:4:37","nodeType":"VariableDeclaration","scope":8620,"src":"592:19:37","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8612,"name":"bytes","nodeType":"ElementaryTypeName","src":"592:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:35:37"},"returnParameters":{"id":8619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8616,"mutability":"mutable","name":"success","nameLocation":"641:7:37","nodeType":"VariableDeclaration","scope":8620,"src":"636:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8615,"name":"bool","nodeType":"ElementaryTypeName","src":"636:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8618,"mutability":"mutable","name":"rate","nameLocation":"658:4:37","nodeType":"VariableDeclaration","scope":8620,"src":"650:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8617,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:28:37"},"scope":8655,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8630,"nodeType":"FunctionDefinition","src":"1185:100:37","nodes":[],"documentation":{"id":8621,"nodeType":"StructuredDocumentation","src":"670:510:37","text":"@notice Check the last exchange rate without any state changes.\n @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\n For example:\n (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\n @return success if no valid (recent) rate is available, return false else true.\n @return rate The rate of the requested asset / pair / pool."},"functionSelector":"eeb8a8d3","implemented":false,"kind":"function","modifiers":[],"name":"peek","nameLocation":"1194:4:37","parameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8623,"mutability":"mutable","name":"data","nameLocation":"1223:4:37","nodeType":"VariableDeclaration","scope":8630,"src":"1208:19:37","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8622,"name":"bytes","nodeType":"ElementaryTypeName","src":"1208:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1198:35:37"},"returnParameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8626,"mutability":"mutable","name":"success","nameLocation":"1262:7:37","nodeType":"VariableDeclaration","scope":8630,"src":"1257:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8625,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8628,"mutability":"mutable","name":"rate","nameLocation":"1279:4:37","nodeType":"VariableDeclaration","scope":8630,"src":"1271:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1256:28:37"},"scope":8655,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":8638,"nodeType":"FunctionDefinition","src":"1784:76:37","nodes":[],"documentation":{"id":8631,"nodeType":"StructuredDocumentation","src":"1291:488:37","text":"@notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\n @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\n For example:\n (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\n @return rate The rate of the requested asset / pair / pool."},"functionSelector":"d39bbef0","implemented":false,"kind":"function","modifiers":[],"name":"peekSpot","nameLocation":"1793:8:37","parameters":{"id":8634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8633,"mutability":"mutable","name":"data","nameLocation":"1817:4:37","nodeType":"VariableDeclaration","scope":8638,"src":"1802:19:37","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8632,"name":"bytes","nodeType":"ElementaryTypeName","src":"1802:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1801:21:37"},"returnParameters":{"id":8637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8636,"mutability":"mutable","name":"rate","nameLocation":"1854:4:37","nodeType":"VariableDeclaration","scope":8638,"src":"1846:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1845:14:37"},"scope":8655,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":8646,"nodeType":"FunctionDefinition","src":"2299:75:37","nodes":[],"documentation":{"id":8639,"nodeType":"StructuredDocumentation","src":"1866:428:37","text":"@notice Returns a human readable (short) name about this oracle.\n @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\n For example:\n (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\n @return (string) A human readable symbol name about this oracle."},"functionSelector":"c699c4d6","implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2308:6:37","parameters":{"id":8642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8641,"mutability":"mutable","name":"data","nameLocation":"2330:4:37","nodeType":"VariableDeclaration","scope":8646,"src":"2315:19:37","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8640,"name":"bytes","nodeType":"ElementaryTypeName","src":"2315:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2314:21:37"},"returnParameters":{"id":8645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8646,"src":"2359:13:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8643,"name":"string","nodeType":"ElementaryTypeName","src":"2359:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2358:15:37"},"scope":8655,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":8654,"nodeType":"FunctionDefinition","src":"2798:73:37","nodes":[],"documentation":{"id":8647,"nodeType":"StructuredDocumentation","src":"2380:413:37","text":"@notice Returns a human readable name about this oracle.\n @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\n For example:\n (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\n @return (string) A human readable name about this oracle."},"functionSelector":"d568866c","implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"2807:4:37","parameters":{"id":8650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8649,"mutability":"mutable","name":"data","nameLocation":"2827:4:37","nodeType":"VariableDeclaration","scope":8654,"src":"2812:19:37","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8648,"name":"bytes","nodeType":"ElementaryTypeName","src":"2812:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2811:21:37"},"returnParameters":{"id":8653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8654,"src":"2856:13:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8651,"name":"string","nodeType":"ElementaryTypeName","src":"2856:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2855:15:37"},"scope":8655,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[8655],"name":"IOracle","nameLocation":"67:7:37","scope":8656,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":37}